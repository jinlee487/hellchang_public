<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
        
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.ncs.green, service, jdbcUtil" />
	
	<!-- ** Mybatis (DAO 역할을 xml 로 정의)  
		=> JDBC Connection, Mybatis 설정 : Sql 구문 등..   	
		=> Namespaces (jdbc , mybatis 추가) 	--> 
		
	<!-- 1) JDBC MYSQL Connection  -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://hellchang.csddfvc4uyqc.ap-northeast-2.rds.amazonaws.com:3306/hellchang_schema_test?serverTimezone=UTC&amp;autoReconnect=true&amp;useSSL=false"/>
		<beans:property name="username" value="admin"/>
		<beans:property name="password" value="hellchang"/>
	</beans:bean>
	<!-- 2) Mybatis 설정	 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="classpath:/mybatis-config.xml" />
		<beans:property name="mapperLocations" value="classpath:/mappers/**/*Mapper.xml" />
	</beans:bean>

	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />						
	</beans:bean>	
	
	<!-- ** ImageUpload: MultipartFile -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="-1" />
	</beans:bean>
	
	<!-- JsonView -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	<beans:property name="order" value="1"></beans:property>
	</beans:bean>
	
	<!-- 1. 트랜잭션 관리자 클래스 등록  : => commit, rollback 지원  -->
	<beans:bean id="txManager" 
				class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"></beans:property>		
	</beans:bean>	
	
	<!--스프링시큐리티 라이브러리 BcryptPasswordEncoder -->
		
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- 2. => Transaction 관리 Advice 설정  -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="sel*" read-only="true"/>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 	3. => AOP 설정 해당 비즈니스 메서드 실행 후 트랜잭션 관리 어드바이스가 동작 하도록 해줌  -->
	<aop:config>
		<aop:pointcut expression="execution(* com.ncs.green.*.join(..))" id="txPointcut"/> 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	
		<!-- 인터셉터 객체 생성 -->
	<beans:bean id="LoginInterceptor" class="com.ncs.green.LoginInterceptor" />
	
	<!-- 인터셉터 설정 -->
	<mvc:interceptors>
			<mvc:interceptor>
				<!-- <mapping path="/**"/>  전체경로 지정-->
				<!-- 제외시킬 파일 경로 
				<exclude-mapping path="joinF"/>
				-->
				<mvc:mapping path="/routine"/>
				<mvc:mapping path="/inbodyDetailAjax"/>
				<mvc:mapping path="/inbodyListAjax"/>
				<mvc:mapping path="/inbodyInsertf"/>
				<mvc:mapping path="/inbodyDetail"/>
				<mvc:mapping path="/inbodyInsert"/>
				<mvc:mapping path="/inbodyUpdate"/>
				<mvc:mapping path="/inbodyDelete"/> 
				<mvc:mapping path="/inbodyf"/>
				<mvc:mapping path="/dietf"/>
				<mvc:mapping path="/socialf"/>
				<mvc:mapping path="/prof"/>
				<mvc:mapping path="/updatef"/>
				<mvc:mapping path="/manageWorkout"/>
				<mvc:mapping path="/myRoutineListAjax"/>
				<mvc:mapping path="/myRoutineDetailAjax"/>
				<mvc:mapping path="/mdetail"/>
			
				<beans:ref bean="LoginInterceptor"/>
			</mvc:interceptor>
	</mvc:interceptors>	
	
	<!-- Exception 설정 -->
<!-- 	 <beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
  		<beans:property name="defaultErrorView"	value="exceptionpage/exceptionMessage"/>
		<beans:property name="defaultErrorView" value="exceptionpage/allException"></beans:property>				 
	</beans:bean> -->
	
	<!-- Social Login 에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.ncs.green.NaverLoginBO" />
	<beans:bean id="kakaoLoginBO" class="com.ncs.green.KakaoLoginBO" />
	<beans:bean id="googleLoginBO" class="com.ncs.green.GoogleLoginBO" />
	
	
    <beans:bean id="facebookConnectionFactory"
        class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
        <beans:constructor-arg value="343236546688686" />
        <beans:constructor-arg value="5068bd9adb80516cd3b1fd7793efcad2" />
    </beans:bean>
 
    <beans:bean id="facebookOAuth2Parameters"
        class="org.springframework.social.oauth2.OAuth2Parameters">
        <beans:property name="scope" value="email" />
        <beans:property name="redirectUri" value="http://localhost:8080/green/facebook_callback" />
    </beans:bean>
	
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="470518751593-6f1947bb9kh11gf4tmvpg0q5shksdosu.apps.googleusercontent.com" />
		<beans:constructor-arg value="zTHmP-T-9W0t58PKvtZekC42" />
	</beans:bean>

	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="profile email"/>
		<beans:property name="redirectUri" value="http://localhost:8080/green/google_callback" />
	</beans:bean> 
	
</beans:beans>


	
	
	<!-- <?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:beans="http://www.springframework.org/schema/beans"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
이메일 관련
<beans:bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
<beans:property name="host" value="smtp.gmail.com" />
<beans:property name="port" value="587" />
<beans:property name="username" value="사용할 이메일" />
<beans:property name="password" value="비밀번호" />
<beans:property name="javaMailProperties">
<beans:props>
<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
<beans:prop key="mail.smtp.auth">true</beans:prop>
</beans:props>
</beans:property>
</beans:bean>
<beans:bean id="mailService" class="com.co.kr.common.mail.service.impl.MailServiceImpl">
<beans:property name="javaMailSender" ref="javaMailSender" />
</beans:bean>
</beans:beans>

 -->

